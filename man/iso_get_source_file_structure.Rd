% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/isodata_structures.R,
%   R/utils_binary_isodat_files.R
\name{iso_get_source_file_structure}
\alias{iso_get_source_file_structure}
\alias{iso_print_source_file_structure}
\alias{iso_print_source_file_structure.binary_isodat_file}
\alias{print.binary_isodat_file}
\title{Get source file and structure}
\usage{
iso_get_source_file_structure(iso_file)

iso_print_source_file_structure(x, ..., save_to_file = NULL)

\method{iso_print_source_file_structure}{binary_isodat_file}(
  x,
  start = 1,
  length = NULL,
  end = start + length,
  ...,
  save_to_file = NULL
)

\method{print}{binary_isodat_file}(x, start = x$pos, length = 200, ...)
}
\arguments{
\item{iso_file}{iso file object}

\item{x}{the object for which to print the source file structure.}

\item{...}{additional parameters depending on source file types}

\item{save_to_file}{whether to save the source file structure to a text file (provide file path, will overwrite anything already in the file!) in addition to printing it out}

\item{start}{starting position in the binary file to print from (prints the first block that spans this range)}

\item{length}{length in the binary file to print to (by default \code{NULL}, which means print everything)}

\item{end}{until which point in the binary file to print to. If provided, overrides whatever is specified in \code{length}}
}
\description{
If an iso file is read with the \link[=iso_turn_debug_on]{debug mode on}, the source data (e.g. binary file) is stored with the file. By default this is not the case because it makes file objects unnecessarily large. Use these functions to retrieve and explore source structures.
}
\details{
Typically these functions are used for debugging purposes only.
}
\examples{
isoreader:::iso_turn_debug_on()
iso_get_reader_example("dual_inlet_example.did") \%>\%  
   iso_read_dual_inlet() \%>\%
   iso_get_source_file_structure() \%>\%
   iso_print_source_file_structure(length = 500)
}
